syntax = "proto3";

package org.v1;

option go_package = "org/v1;orgv1";

// OrgService — владелец организаций
service OrgService {
  // Создать новую организацию (обычный сценарий, пользователь уже существует)
  rpc RegisterOrg(RegisterOrgRequest) returns (RegisterOrgResponse);

  // Получить данные об организации
  rpc GetOrg(GetOrgRequest) returns (GetOrgResponse);

  // Удалить организацию (компенсация при ошибках, обычно вызывается Auth при fail)
  rpc DeleteOrg(DeleteOrgRequest) returns (DeleteOrgResponse);
}

// Для создания организации (вручную или через очередь)
message RegisterOrgRequest {
  string org_name = 1;   // Название организации
  string owner_id = 2;   // ID пользователя-владельца
}

// Ответ на создание организации
message RegisterOrgResponse {
  string org_id = 1;
  bool success = 2;
  string error_message = 3;
}

// Получение инфы об организации по ID
message GetOrgRequest {
  string org_id = 1;
}
message GetOrgResponse {
  string org_id = 1;
  string org_name = 2;
  string created_at = 3;
}

// Удаление организации (компенсация)
message DeleteOrgRequest {
  string org_id = 1;
}
message DeleteOrgResponse {
  bool success = 1;
  string error_message = 2;
}
